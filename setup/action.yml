name: 'Setup pandoc'
author: 'Albert Krewinkel'
description: 'Installs pandoc from the official binaries.'
inputs:
  version:
    description: 'The version of pandoc to be installed.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: 'Choose which installer to use'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        REPO: jgm/pandoc
      run: |
        # Use the latest version by default
        if [ -z "${{ inputs.version }}" ]; then
            PANDOC_VERSION="$(\
                gh release view \
                    --json tagName \
                    -t '{{.tagName}}' \
                    --repo "$REPO")"
        else
            PANDOC_VERSION='${{ inputs.version }}'
        fi
        printf 'PANDOC_VERSION=%s\n' "$PANDOC_VERSION" >> $GITHUB_ENV
        case $RUNNER_OS in
            ("Linux")
                printf 'INSTALLER_SUFFIX=1-amd64.deb\n' >> $GITHUB_ENV
                ;;
            ("macOS")
                printf '%s' "$PANDOC_VERSION" | \
                if grep -q "^2\."; then \
                    printf 'INSTALLER_SUFFIX=macOS.pkg\n' >> $GITHUB_ENV
                else
                    printf 'INSTALLER_SUFFIX=x86_64-macOS.pkg\n' >> $GITHUB_ENV
                fi
                ;;
            (*)
                printf 'Do not know how to install pandoc on %s\n' "$RUNNER_OS"
                exit 1
                ;;
        esac

    - name: 'Download installer'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        REPO: jgm/pandoc
      run: |
        gh release download ${{ env.PANDOC_VERSION }} \
            --repo "$REPO" \
            --pattern '*'${{ env.INSTALLER_SUFFIX }}

    - name: 'Install pandoc'
      shell: bash
      env:
        INSTALLER: pandoc-${{ env.PANDOC_VERSION }}-${{ env.INSTALLER_SUFFIX }}
      run: |
        case $RUNNER_OS in
          "Linux")
              sudo apt install ./$INSTALLER
              ;;
           "macOS")
              sudo installer -pkg ./$INSTALLER -target '/'
              ;;
            *)
              echo "$RUNNER_OS not supported"
              exit 1
              ;;
        esac
        rm $INSTALLER
